package tagger.gui.TokenizerTab.cards;

import tagger.gui.Page.components.ControlBar;
import tagger.gui.TokenizerTab.TokenizeMediator;
import tagger.gui.components.CheckLists.TokenCheckList;
import tagger.token.TokenList;

import javax.swing.*;
import java.awt.*;

/**
 * Page that lists tags generated by tagger
 */
public class TagPage extends CardTemplate {

    private TokenCheckList checkList;

    public TagPage() {
        super();
        this.checkList = new TokenCheckList();
        this.add(new JScrollPane(this.checkList), BorderLayout.CENTER);
    }

    public void setTokens(TokenList tokens) {
        this.checkList.removeAll();
        this.checkList.addWords(tokens);
    }

    public TokenList getTokens() {
        return this.checkList.getSelected();
    }


    protected ControlBar buildControlBar() {
        ControlBar controlBar = super.buildControlBar();
        JLabel label = new JLabel("Select tags to add");
        JButton button = new JButton("Deselect All");
        TokenizeMediator.getInstance().setDeselectButton(button);
        controlBar.add(label, BorderLayout.WEST);
        controlBar.add(button, BorderLayout.EAST);
        return controlBar;
    }


    @Override
    public String getName() {
        return "Tag Page";
    }

    @Override
    protected void onFocusChange() {
        //this.setTokens( Tagger.getInstance().getTokens() );
    }

    public void deselectAll() {
        this.checkList.selectAll(false);
    }


}
